services:
  backend:
    build:
      context: ./backend 
      dockerfile: Dockerfile
    env_file: ./backend/.env  # Todas las variables ac√°
    volumes:
      - ./backend:/app
    ports:
      - "5000:5000"
    environment:
      - FLASK_ENV=development  # Solo esta variable adicional
      - MONGOURL=mongodb://mongo:27017/Tienda
    depends_on:
      - mongo
      - minio

  frontend:
    build:
      context: ./frontend
      dockerfile: dockerfile
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development

  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db

  minio:
    image: minio/minio:latest
    ports:
      - "9000:9000" #API
      - "9001:9001" #Interfaz grafica
    command: server /data --console-address ":9001"
    env_file: ./backend/.env
    volumes:
      - minio-data:/data
      - ./scripts:/scripts
    healthcheck: # marca el contenedor como sano si responde, para que otros servicios esperean antes de conectarse
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 10s
      timeout: 5s
      retries: 6

  minio-setup:
    image: minio/mc
    depends_on: #asegura que el minio se inicie antes que este contenedor
      - minio
    volumes:
      - ./scripts/init-minio-dev.sh:/init-minio-dev.sh
    entrypoint: /init-minio-dev.sh
    env_file: ./backend/.env

volumes:
  minio-data: #almacena los archivos reales del bucket
  mongo-data: